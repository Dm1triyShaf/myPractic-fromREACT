{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\react-project\\\\my-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [likes, setLikes] = useState(5);\n  /* создаем состояние - likes, setLikes - функция которое состояние изменяет, создаем функцию useState и импортируем ее */\n\n  const [value, setValue] = useState(\"текст в импуте\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: likes\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"h1\", {\n      children: value\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: value\n      /*  добпаляем атрибут value и состояние {value} */\n      ,\n      onChange: event => setValue(event.target.value)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 7\n    }, this), \"   \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"ZwD0Df3/x1Dk5anKj5GAM66HBgQ=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","App","likes","setLikes","value","setValue","event","target"],"sources":["D:/Project/React/react-project/my-project/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\n\nfunction App() {\n\n  const [likes, setLikes] = useState(5)  /* создаем состояние - likes, setLikes - функция которое состояние изменяет, создаем функцию useState и импортируем ее */\n  const [value, setValue] = useState(\"текст в импуте\")\n\n  return (\n    <div className=\"App\">\n      <h1>{likes}</h1>\n      <h1>{value}</h1>\n      <input type=\"text\" value={value}        /*  добпаляем атрибут value и состояние {value} */\n        onChange={event => setValue(event.target.value)} />   {/* слушатель события onChange, targett сам дом элемент,value значение которое в нем находится */}\n    \n\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EAEb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBH,QAAQ,CAAC,CAAD,CAAlC;EAAuC;;EACvC,MAAM,CAACI,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,gBAAD,CAAlC;EAEA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,UAAKE;IAAL;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAA,UAAKE;IAAL;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAO,IAAI,EAAC,MAAZ;MAAmB,KAAK,EAAEA;MAAc;MAAxC;MACE,QAAQ,EAAEE,KAAK,IAAID,QAAQ,CAACC,KAAK,CAACC,MAAN,CAAaH,KAAd;IAD7B;MAAA;MAAA;MAAA;IAAA,QAHF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAUD;;GAfQH,G;;KAAAA,G;AAiBT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\react-project\\\\my-project\\\\src\\\\components\\\\UI\\\\myModal\\\\MyModal.jsx\";\n\n/* пропсы \r\nchildren - для добавления в модальное окно\r\nvisible - отвечает за видимость модального окна\r\nsetVisible - функция которая скрывет модальное окно, если нажимаем на темную область*/\nimport React from \"react\";\nimport cl from './MyModal.module.css';\n/* 2 импортируем стили */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MyModal = _ref => {\n  let {\n    children,\n    visible,\n    setVisible\n  } = _ref;\n\n  /* 2 создаем компонент и добавляем пропсы*/\n  const rootClasses = [cl.myModal];\n  /* 3 создаем переменную rootClasses с классом myModal  */\n\n  if (visible) {\n    /*  4 создаем условие если visible, то добаляем еще один класс active */\n    rootClasses.push(cl.active);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: rootClasses.join(' '),\n    onClick: () => setVisible(false),\n    children: [\"   \", /*#__PURE__*/_jsxDEV(\"div\", {\n      className: cl.myModalContent,\n      onClick: e => e.stopPropagation(),\n      children: [\"  \", children]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 9\n  }, this);\n};\n\n_c = MyModal;\nexport default MyModal;\n\nvar _c;\n\n$RefreshReg$(_c, \"MyModal\");","map":{"version":3,"names":["React","cl","MyModal","children","visible","setVisible","rootClasses","myModal","push","active","join","myModalContent","e","stopPropagation"],"sources":["D:/Project/React/react-project/my-project/src/components/UI/myModal/MyModal.jsx"],"sourcesContent":["/* пропсы \r\nchildren - для добавления в модальное окно\r\nvisible - отвечает за видимость модального окна\r\nsetVisible - функция которая скрывет модальное окно, если нажимаем на темную область*/\r\n\r\n\r\nimport React from \"react\";\r\nimport cl from './MyModal.module.css';  /* 2 импортируем стили */\r\n\r\n\r\n\r\nconst MyModal = ({children, visible, setVisible}) => {   /* 2 создаем компонент и добавляем пропсы*/\r\n\r\n    const rootClasses = [cl.myModal]  /* 3 создаем переменную rootClasses с классом myModal  */\r\n\r\n    if (visible) {     /*  4 создаем условие если visible, то добаляем еще один класс active */\r\n        rootClasses.push(cl.active);\r\n    }\r\n\r\n    return (\r\n        <div className = {rootClasses.join(' ')} onClick = {() => setVisible(false)}>   {/* 5 используем rootClasses (с помощью этой конструкции определяем добавлять active или нет*/}\r\n            <div className={cl.myModalContent} onClick = {(e) => e.stopPropagation()}>  {/* 11 функция stopPropagation что бы модальное окно не закрывалась при нажатии на контентную часть */}\r\n                {children}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default MyModal;"],"mappings":";;AAAA;AACA;AACA;AACA;AAGA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,EAAP,MAAe,sBAAf;AAAwC;;;;AAIxC,MAAMC,OAAO,GAAG,QAAqC;EAAA,IAApC;IAACC,QAAD;IAAWC,OAAX;IAAoBC;EAApB,CAAoC;;EAAI;EAErD,MAAMC,WAAW,GAAG,CAACL,EAAE,CAACM,OAAJ,CAApB;EAAkC;;EAElC,IAAIH,OAAJ,EAAa;IAAM;IACfE,WAAW,CAACE,IAAZ,CAAiBP,EAAE,CAACQ,MAApB;EACH;;EAED,oBACI;IAAK,SAAS,EAAIH,WAAW,CAACI,IAAZ,CAAiB,GAAjB,CAAlB;IAAyC,OAAO,EAAI,MAAML,UAAU,CAAC,KAAD,CAApE;IAAA,+BACI;MAAK,SAAS,EAAEJ,EAAE,CAACU,cAAnB;MAAmC,OAAO,EAAKC,CAAD,IAAOA,CAAC,CAACC,eAAF,EAArD;MAAA,iBACKV,QADL;IAAA;MAAA;MAAA;MAAA;IAAA,QADJ;EAAA;IAAA;IAAA;IAAA;EAAA,QADJ;AAOH,CAfD;;KAAMD,O;AAiBN,eAAeA,OAAf"},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\react-project\\\\my-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PostForm from './components/postForm';\nimport PostList from './components/postList';\nimport './styles/App.css';\nimport MySelect from '../src/components/UI/select/MySelect';\n/* импортируем  */\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: 'ffdf',\n    body: 'fdw'\n  }, {\n    id: 2,\n    title: 'awewe 2',\n    body: 'Description'\n  }, {\n    id: 3,\n    title: 'cxvb 3',\n    body: 'yjy'\n  }]);\n  const [selectedSort, setSelectedSort] = useState('');\n  /* создаем двухстороннее связывение selectedSort, с помощью useState инициализируем */\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const sortPosts = sort => {\n    /* создаем функцию для сортирвки массива */\n    setSelectedSort(sort);\n    /* перезаписываем состояние */\n\n    console.log(sort);\n    setPosts([...posts].sort((a, b) => a[sort].localeCompare(b[sort])));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(MySelect\n      /* заменяем селект  */\n      , {\n        value: selectedSort\n        /* в качестве value передаем selectedSort */\n        ,\n        onChange: sortPosts\n        /*  вызываем функцию и передаем туда setSelectedSort, та опция которую выбрал пользователь */\n        ,\n        defaultValue: \"\\u0421\\u043E\\u0440\\u0442\\u0438\\u0440\\u043E\\u0432\\u043A\\u0430\"\n        /* передаем необходимые пропсы */\n        ,\n        options: [\n        /* передаем массив опций с двумя обьектами */\n        {\n          value: 'title',\n          name: 'По названию'\n        },\n        /* обьекты с сортировкаой по заголовку  */\n        {\n          value: 'body',\n          name: 'По описанию'\n        }\n        /*обьекты с сортировкаой по телу */\n        ]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), posts.length !== 0 ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: posts,\n      title: \"\\u043F\\u043E\\u0441\\u0442\\u044B \\u043F\\u0440\\u043E Javascript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"Y+goRsT5hwqs4Z/GrAXv1i8x/Bs=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","PostForm","PostList","MySelect","App","posts","setPosts","id","title","body","selectedSort","setSelectedSort","createPost","newPost","removePost","post","filter","p","sortPosts","sort","console","log","a","b","localeCompare","margin","value","name","length","textAlign"],"sources":["D:/Project/React/react-project/my-project/src/App.js"],"sourcesContent":["import React, {  useState } from 'react';\nimport PostForm from './components/postForm';\nimport PostList from './components/postList';\nimport './styles/App.css';\nimport MySelect from '../src/components/UI/select/MySelect'   /* импортируем  */\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    { id: 1, title: 'ffdf', body: 'fdw' },\n    { id: 2, title: 'awewe 2', body: 'Description' },\n    { id: 3, title: 'cxvb 3', body: 'yjy' },\n\n  ])\n\n\n  const [selectedSort,setSelectedSort] = useState('')    /* создаем двухстороннее связывение selectedSort, с помощью useState инициализируем */\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost])\n  }\n\n\n\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id))\n\n  }\n\n  const sortPosts = (sort) => {    /* создаем функцию для сортирвки массива */\n    \n    setSelectedSort(sort);    /* перезаписываем состояние */\n    console.log(sort)\n    setPosts([...posts].sort((a,b)=>a[sort].localeCompare(b[sort])))\n  }\n\n\n  return (\n    <div className=\"App\">\n      <PostForm create={createPost} />\n      <hr style={{ margin: '15px 0' }}/> \n      <div>\n        <MySelect     /* заменяем селект  */\n          value={selectedSort}   /* в качестве value передаем selectedSort */\n          onChange={sortPosts}   /*  вызываем функцию и передаем туда setSelectedSort, та опция которую выбрал пользователь */\n          defaultValue=\"Сортировка\"   /* передаем необходимые пропсы */\n          options={[       /* передаем массив опций с двумя обьектами */\n            {value: 'title', name:'По названию'},     /* обьекты с сортировкаой по заголовку  */\n            {value: 'body', name:'По описанию'}        /*обьекты с сортировкаой по телу */\n          ]} \n          />\n\n      </div>\n      {posts.length !== 0\n        ? <PostList remove={removePost} posts={posts} title=\"посты про Javascript\" />\n        : <h1 style={{ textAlign: 'center' }}>\n          Посты не найдены\n        </h1>\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,QAAjB,QAAiC,OAAjC;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,sCAArB;AAA8D;;;;AAE9D,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CACjC;IAAEO,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,MAAhB;IAAwBC,IAAI,EAAE;EAA9B,CADiC,EAEjC;IAAEF,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,SAAhB;IAA2BC,IAAI,EAAE;EAAjC,CAFiC,EAGjC;IAAEF,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,QAAhB;IAA0BC,IAAI,EAAE;EAAhC,CAHiC,CAAD,CAAlC;EAQA,MAAM,CAACC,YAAD,EAAcC,eAAd,IAAiCX,QAAQ,CAAC,EAAD,CAA/C;EAAuD;;EAEvD,MAAMY,UAAU,GAAIC,OAAD,IAAa;IAC9BP,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWQ,OAAX,CAAD,CAAR;EACD,CAFD;;EAMA,MAAMC,UAAU,GAAIC,IAAD,IAAU;IAC3BT,QAAQ,CAACD,KAAK,CAACW,MAAN,CAAaC,CAAC,IAAIA,CAAC,CAACV,EAAF,KAASQ,IAAI,CAACR,EAAhC,CAAD,CAAR;EAED,CAHD;;EAKA,MAAMW,SAAS,GAAIC,IAAD,IAAU;IAAK;IAE/BR,eAAe,CAACQ,IAAD,CAAf;IAA0B;;IAC1BC,OAAO,CAACC,GAAR,CAAYF,IAAZ;IACAb,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWc,IAAX,CAAgB,CAACG,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAACH,IAAD,CAAD,CAAQK,aAAR,CAAsBD,CAAC,CAACJ,IAAD,CAAvB,CAAvB,CAAD,CAAR;EACD,CALD;;EAQA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,QAAD;MAAU,MAAM,EAAEP;IAAlB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAI,KAAK,EAAE;QAAEa,MAAM,EAAE;MAAV;IAAX;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE;MAAA,uBACE,QAAC;MAAa;MAAd;QACE,KAAK,EAAEf;QAAgB;QADzB;QAEE,QAAQ,EAAEQ;QAAa;QAFzB;QAGE,YAAY,EAAC;QAAe;QAH9B;QAIE,OAAO,EAAE;QAAQ;QACf;UAACQ,KAAK,EAAE,OAAR;UAAiBC,IAAI,EAAC;QAAtB,CADO;QACmC;QAC1C;UAACD,KAAK,EAAE,MAAR;UAAgBC,IAAI,EAAC;QAArB;QAA2C;QAFpC;MAJX;QAAA;QAAA;QAAA;MAAA;IADF;MAAA;MAAA;MAAA;IAAA,QAHF,EAeGtB,KAAK,CAACuB,MAAN,KAAiB,CAAjB,gBACG,QAAC,QAAD;MAAU,MAAM,EAAEd,UAAlB;MAA8B,KAAK,EAAET,KAArC;MAA4C,KAAK,EAAC;IAAlD;MAAA;MAAA;MAAA;IAAA,QADH,gBAEG;MAAI,KAAK,EAAE;QAAEwB,SAAS,EAAE;MAAb,CAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAjBN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAyBD;;GAvDQzB,G;;KAAAA,G;AAyDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
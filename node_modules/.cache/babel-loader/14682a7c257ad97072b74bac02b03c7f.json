{"ast":null,"code":"export const getPageCount = (totalCount, limit) => {\n  /* 8 создаем фугкцию для работы с номерами страниц. Агрументом будет общще количесво элементов */\n  return Math.ceil(totalCount / limit);\n  /* и возвращать необходимое количество страниц */\n};\nexport const getPagesArray = totalPages => {\n  /* 10 создаем функцию которая принимает общее количесво страниц и на основании количесва заполняет масссив */\n  let result = [];\n  /* 11 создаем массив */\n\n  for (let i = 0; i < totalPages; i++) {\n    result.push(i + 1);\n  }\n\n  return result;\n};","map":{"version":3,"names":["getPageCount","totalCount","limit","Math","ceil","getPagesArray","totalPages","result","i","push"],"sources":["D:/Project/React/react-project/my-project/src/utils/pages.js"],"sourcesContent":["export const getPageCount = (totalCount, limit) => {   /* 8 создаем фугкцию для работы с номерами страниц. Агрументом будет общще количесво элементов */\r\n    return Math.ceil(totalCount/limit)     /* и возвращать необходимое количество страниц */\r\n}\r\n\r\n\r\nexport const getPagesArray = (totalPages) => {  /* 10 создаем функцию которая принимает общее количесво страниц и на основании количесва заполняет масссив */\r\n    let result = [];   /* 11 создаем массив */\r\n    for (let i = 0; i < totalPages; i++) {  \r\n        result.push(i + 1)\r\n    }\r\n    return result;\r\n}"],"mappings":"AAAA,OAAO,MAAMA,YAAY,GAAG,CAACC,UAAD,EAAaC,KAAb,KAAuB;EAAI;EACnD,OAAOC,IAAI,CAACC,IAAL,CAAUH,UAAU,GAACC,KAArB,CAAP;EAAuC;AAC1C,CAFM;AAKP,OAAO,MAAMG,aAAa,GAAIC,UAAD,IAAgB;EAAG;EAC5C,IAAIC,MAAM,GAAG,EAAb;EAAmB;;EACnB,KAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGF,UAApB,EAAgCE,CAAC,EAAjC,EAAqC;IACjCD,MAAM,CAACE,IAAP,CAAYD,CAAC,GAAG,CAAhB;EACH;;EACD,OAAOD,MAAP;AACH,CANM"},"metadata":{},"sourceType":"module"}
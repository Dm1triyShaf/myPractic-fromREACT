{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\react-project\\\\my-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from 'react';\n/* импортируем useRef */\n\nimport PostList from './components/postList';\nimport MyButton from './components/UI/button/MyButton';\nimport MyInput from './components/UI/input/MyInput';\nimport './styles/App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: 'Javascript',\n    body: 'Description'\n  }, {\n    id: 2,\n    title: 'Javascript 2',\n    body: 'Description'\n  }, {\n    id: 3,\n    title: 'Javascript 3',\n    body: 'Description'\n  }]);\n  const [post, setPost] = useState({\n    title: '',\n    body\n  });\n  /* делаем состояние post */\n\n  const addNewPost = e => {\n    /* создаем эту функцию */\n    e.preventDefault();\n    /* вызываем функцию preventDefault, которая предотвращает дефолтное поведение браузера */\n\n    const newPost = {\n      /* создаем новый обьект и передаем туда массив*/\n      id: Date.now(),\n\n      /* передаем уникальный айдишник из даты в милисикундах */\n      title,\n\n      /* передаем заголовок */\n      body\n      /* передаем боди */\n\n    };\n    setPosts([...posts, newPost]);\n    /* созданный обьект добавляем в массив постов (разварачиваем старый массив и добавляем новый) */\n\n    setTitle('');\n    /* очищаем состоние строк */\n\n    setBody('');\n    /* очищаем состоние строк */\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"form\", {\n      children: [/*#__PURE__*/_jsxDEV(MyInput, {\n        value: post.title\n        /* Связываем валью инпута с состонием title достаем его из поста */\n        ,\n        onChange: e => setTitle(e.target.value)\n        /* добавляем функцию onChange что бы видеть как пользователь что-то вводит */\n        ,\n        type: \"text\",\n        placeholder: \"\\u041D\\u0430\\u0437\\u0432\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyInput, {\n        value: post.body\n        /* Связываем валью инпута с состонием title достаем его из поста   */\n        ,\n        onChange: e => setBody(e.target.value)\n        /* добавляем функцию onChange что бы видеть как пользователь что-то вводит */\n        ,\n        type: \"text\",\n        placeholder: \"\\u041E\\u043F\\u0438\\u0441\\u0430\\u043D\\u0438\\u0435 \\u043F\\u043E\\u0441\\u0442\\u0430\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(MyButton, {\n        onClick: addNewPost,\n        children: \"\\u0421\\u043E\\u0437\\u0434\\u0430\\u0442\\u044C \\u043F\\u043E\\u0441\\u0442\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 9\n      }, this), \"      \"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostList, {\n      posts: posts,\n      title: \"\\u043F\\u043E\\u0441\\u0442\\u044B \\u043F\\u0440\\u043E js 1\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"QVhlFN6i/F3nlkDt9pCjIFzn10w=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useRef","useState","PostList","MyButton","MyInput","App","posts","setPosts","id","title","body","post","setPost","addNewPost","e","preventDefault","newPost","Date","now","setTitle","setBody","target","value"],"sources":["D:/Project/React/react-project/my-project/src/App.js"],"sourcesContent":["import React, { useRef, useState } from 'react';   /* импортируем useRef */\nimport PostList from './components/postList';\nimport MyButton from './components/UI/button/MyButton';\nimport MyInput from './components/UI/input/MyInput';\nimport './styles/App.css';\n\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    { id: 1, title: 'Javascript', body: 'Description' },\n    { id: 2, title: 'Javascript 2', body: 'Description' },\n    { id: 3, title: 'Javascript 3', body: 'Description' },\n\n  ])\n\n\n  const [post, setPost] = useState({title:'',body})    /* делаем состояние post */\n \n  \n\n  const addNewPost = (e) => {     /* создаем эту функцию */\n  e.preventDefault()          /* вызываем функцию preventDefault, которая предотвращает дефолтное поведение браузера */\n    const newPost = {    /* создаем новый обьект и передаем туда массив*/\n      id:Date.now(),     /* передаем уникальный айдишник из даты в милисикундах */\n      title,    /* передаем заголовок */\n      body      /* передаем боди */\n    }\n    setPosts([...posts,newPost])  /* созданный обьект добавляем в массив постов (разварачиваем старый массив и добавляем новый) */\n    setTitle('')          /* очищаем состоние строк */\n    setBody('')           /* очищаем состоние строк */\n  }\n\n  return (\n    <div className=\"App\">\n      <form>\n        {/* УПРАВЛЯЕМЫЙ КОМПОНЕНТ */}\n        <MyInput\n        \n          value={post.title}    /* Связываем валью инпута с состонием title достаем его из поста */\n          onChange={e => setTitle(e.target.value)}    /* добавляем функцию onChange что бы видеть как пользователь что-то вводит */\n          type=\"text\"\n          placeholder='Название поста' />\n\n        {/* НЕУПРАВЛЯЕМЫЙ КОМПОНЕНТ */}\n        <MyInput\n          value={post.body}    /* Связываем валью инпута с состонием title достаем его из поста   */\n          onChange={e => setBody(e.target.value)}    /* добавляем функцию onChange что бы видеть как пользователь что-то вводит */\n          type=\"text\"\n          placeholder='Описание поста' />\n        <MyButton onClick={addNewPost}>Создать пост</MyButton>      {/* вешаем слушатель события на кнопку и при нажатии добавляем фугкцию */}\n      </form>\n      <PostList posts={posts} title=\"посты про js 1\" />\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AAAmD;;AACnD,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,iCAArB;AACA,OAAOC,OAAP,MAAoB,+BAApB;AACA,OAAO,kBAAP;;;AAGA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAAC,CACjC;IAAEO,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,YAAhB;IAA8BC,IAAI,EAAE;EAApC,CADiC,EAEjC;IAAEF,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,cAAhB;IAAgCC,IAAI,EAAE;EAAtC,CAFiC,EAGjC;IAAEF,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,cAAhB;IAAgCC,IAAI,EAAE;EAAtC,CAHiC,CAAD,CAAlC;EAQA,MAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBX,QAAQ,CAAC;IAACQ,KAAK,EAAC,EAAP;IAAUC;EAAV,CAAD,CAAhC;EAAqD;;EAIrD,MAAMG,UAAU,GAAIC,CAAD,IAAO;IAAM;IAChCA,CAAC,CAACC,cAAF;IAA4B;;IAC1B,MAAMC,OAAO,GAAG;MAAK;MACnBR,EAAE,EAACS,IAAI,CAACC,GAAL,EADW;;MACK;MACnBT,KAFc;;MAEJ;MACVC;MAAU;;IAHI,CAAhB;IAKAH,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAUU,OAAV,CAAD,CAAR;IAA8B;;IAC9BG,QAAQ,CAAC,EAAD,CAAR;IAAsB;;IACtBC,OAAO,CAAC,EAAD,CAAP;IAAsB;EACvB,CAVD;;EAYA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA,wBAEE,QAAC,OAAD;QAEE,KAAK,EAAET,IAAI,CAACF;QAAU;QAFxB;QAGE,QAAQ,EAAEK,CAAC,IAAIK,QAAQ,CAACL,CAAC,CAACO,MAAF,CAASC,KAAV;QAAqB;QAH9C;QAIE,IAAI,EAAC,MAJP;QAKE,WAAW,EAAC;MALd;QAAA;QAAA;QAAA;MAAA,QAFF,eAUE,QAAC,OAAD;QACE,KAAK,EAAEX,IAAI,CAACD;QAAS;QADvB;QAEE,QAAQ,EAAEI,CAAC,IAAIM,OAAO,CAACN,CAAC,CAACO,MAAF,CAASC,KAAV;QAAqB;QAF7C;QAGE,IAAI,EAAC,MAHP;QAIE,WAAW,EAAC;MAJd;QAAA;QAAA;QAAA;MAAA,QAVF,eAeE,QAAC,QAAD;QAAU,OAAO,EAAET,UAAnB;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QAfF;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,eAkBE,QAAC,QAAD;MAAU,KAAK,EAAEP,KAAjB;MAAwB,KAAK,EAAC;IAA9B;MAAA;MAAA;MAAA;IAAA,QAlBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAsBD;;GA/CQD,G;;KAAAA,G;AAiDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}
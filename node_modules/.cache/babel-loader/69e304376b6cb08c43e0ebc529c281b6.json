{"ast":null,"code":"var _jsxFileName = \"D:\\\\Project\\\\React\\\\react-project\\\\my-project\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useMemo, useState } from 'react';\n/* 8 импортируем хук useMemo */\n\nimport PostForm from './components/postForm';\nimport PostList from './components/postList';\nimport './styles/App.css';\nimport MySelect from '../src/components/UI/select/MySelect';\nimport MyInput from './components/UI/input/MyInput';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [posts, setPosts] = useState([{\n    id: 1,\n    title: 'ffdf',\n    body: 'fdw'\n  }, {\n    id: 2,\n    title: 'awewe 2',\n    body: 'Description'\n  }, {\n    id: 3,\n    title: 'cxvb 3',\n    body: 'yjy'\n  }]);\n  const [filter, setFilter] = useState({\n    sort: ''\n  });\n  const sortedPosts = useMemo(() => {\n    /* 9 создаем хук useMemo, первым параметром передаем колбек, вторым массив зависимостей */\n    console.log('ОТРАБОТАЛА ФУНКЦИЯ sortedPosts');\n\n    if (selectedSort) {\n      return [...posts].sort((a, b) => a[selectedSort].localeCompare(b[selectedSort]));\n      /* 6 добавляем механизм сортировки */\n    }\n\n    return posts;\n  }, [selectedSort, posts]);\n  const sortedAndSearcedPosts = useMemo(() => {\n    /* 10 что бы поиск работал в отсортированном массиве используем опять useMemo, первым параметром колбек, вторым массив зависимостей */\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(searсhQuery));\n    /* 12 передаем фильтер колбер, потом в title вызываем функцию includes и передаем туда поисковую строку. Функция toLowerCase для игнорирования регистра  */\n  }, [searсhQuery, sortedPosts]);\n\n  const createPost = newPost => {\n    setPosts([...posts, newPost]);\n  };\n\n  const removePost = post => {\n    setPosts(posts.filter(p => p.id !== post.id));\n  };\n\n  const sortPosts = sort => {\n    setSelectedSort(sort);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(PostForm, {\n      create: createPost\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {\n      style: {\n        margin: '15px 0'\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PostFilter, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), sortedAndSearcedPosts.length !== 0\n    /* 13 передаем условие \"Посты не найдены\" */\n    ? /*#__PURE__*/_jsxDEV(PostList, {\n      remove: removePost,\n      posts: sortedAndSearcedPosts,\n      title: \"\\u043F\\u043E\\u0441\\u0442\\u044B \\u043F\\u0440\\u043E Javascript\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 11\n    }, this)\n    /* 11 передаем отсортированный массив постов */\n    : /*#__PURE__*/_jsxDEV(\"h1\", {\n      style: {\n        textAlign: 'center'\n      },\n      children: \"\\u041F\\u043E\\u0441\\u0442\\u044B \\u043D\\u0435 \\u043D\\u0430\\u0439\\u0434\\u0435\\u043D\\u044B\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 11\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"DII7s4xrBRN9Y8cublA85JwWkrM=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useMemo","useState","PostForm","PostList","MySelect","MyInput","App","posts","setPosts","id","title","body","filter","setFilter","sort","sortedPosts","console","log","selectedSort","a","b","localeCompare","sortedAndSearcedPosts","post","toLowerCase","includes","searсhQuery","createPost","newPost","removePost","p","sortPosts","setSelectedSort","margin","length","textAlign"],"sources":["D:/Project/React/react-project/my-project/src/App.js"],"sourcesContent":["import React, {  useMemo, useState } from 'react';  /* 8 импортируем хук useMemo */\nimport PostForm from './components/postForm';\nimport PostList from './components/postList';\nimport './styles/App.css';\nimport MySelect from '../src/components/UI/select/MySelect'   \nimport MyInput from './components/UI/input/MyInput';\n\nfunction App() {\n  const [posts, setPosts] = useState([\n    { id: 1, title: 'ffdf', body: 'fdw' },\n    { id: 2, title: 'awewe 2', body: 'Description' },\n    { id: 3, title: 'cxvb 3', body: 'yjy' },\n\n  ])\n\n\n const [filter,setFilter] = useState({sort:''})\n\n\n  const sortedPosts = useMemo( () => {   /* 9 создаем хук useMemo, первым параметром передаем колбек, вторым массив зависимостей */\n    console.log('ОТРАБОТАЛА ФУНКЦИЯ sortedPosts')\n    if(selectedSort) {\n      return [...posts].sort((a,b)=>a[selectedSort].localeCompare(b[selectedSort]))  /* 6 добавляем механизм сортировки */\n    }\n      return posts;\n    }, [selectedSort, posts])\n\n  const sortedAndSearcedPosts = useMemo(() =>{   /* 10 что бы поиск работал в отсортированном массиве используем опять useMemo, первым параметром колбек, вторым массив зависимостей */\n    return sortedPosts.filter(post => post.title.toLowerCase().includes(searсhQuery))  /* 12 передаем фильтер колбер, потом в title вызываем функцию includes и передаем туда поисковую строку. Функция toLowerCase для игнорирования регистра  */\n  },[searсhQuery,sortedPosts])\n\n  const createPost = (newPost) => {\n    setPosts([...posts, newPost])\n  }\n\n\n\n  const removePost = (post) => {\n    setPosts(posts.filter(p => p.id !== post.id))\n\n  }\n\n  const sortPosts = (sort) => {    \n    setSelectedSort(sort);   \n  }\n\n\n  return (\n    <div className=\"App\">\n      <PostForm create={createPost} />\n      <hr style={{ margin: '15px 0' }}/> \n      <PostFilter/>\n      {sortedAndSearcedPosts.length !== 0    /* 13 передаем условие \"Посты не найдены\" */\n        ? <PostList remove={removePost} posts={sortedAndSearcedPosts} title=\"посты про Javascript\" />    /* 11 передаем отсортированный массив постов */\n        : <h1 style={{ textAlign: 'center' }}>\n          Посты не найдены\n        </h1>\n      }\n\n    </div>\n  );\n}\n\nexport default App;\n\n\n\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAiBC,OAAjB,EAA0BC,QAA1B,QAA0C,OAA1C;AAAoD;;AACpD,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAOC,QAAP,MAAqB,uBAArB;AACA,OAAO,kBAAP;AACA,OAAOC,QAAP,MAAqB,sCAArB;AACA,OAAOC,OAAP,MAAoB,+BAApB;;;AAEA,SAASC,GAAT,GAAe;EAAA;;EACb,MAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBP,QAAQ,CAAC,CACjC;IAAEQ,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,MAAhB;IAAwBC,IAAI,EAAE;EAA9B,CADiC,EAEjC;IAAEF,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,SAAhB;IAA2BC,IAAI,EAAE;EAAjC,CAFiC,EAGjC;IAAEF,EAAE,EAAE,CAAN;IAASC,KAAK,EAAE,QAAhB;IAA0BC,IAAI,EAAE;EAAhC,CAHiC,CAAD,CAAlC;EAQD,MAAM,CAACC,MAAD,EAAQC,SAAR,IAAqBZ,QAAQ,CAAC;IAACa,IAAI,EAAC;EAAN,CAAD,CAAnC;EAGC,MAAMC,WAAW,GAAGf,OAAO,CAAE,MAAM;IAAI;IACrCgB,OAAO,CAACC,GAAR,CAAY,gCAAZ;;IACA,IAAGC,YAAH,EAAiB;MACf,OAAO,CAAC,GAAGX,KAAJ,EAAWO,IAAX,CAAgB,CAACK,CAAD,EAAGC,CAAH,KAAOD,CAAC,CAACD,YAAD,CAAD,CAAgBG,aAAhB,CAA8BD,CAAC,CAACF,YAAD,CAA/B,CAAvB,CAAP;MAA+E;IAChF;;IACC,OAAOX,KAAP;EACD,CANwB,EAMtB,CAACW,YAAD,EAAeX,KAAf,CANsB,CAA3B;EAQA,MAAMe,qBAAqB,GAAGtB,OAAO,CAAC,MAAK;IAAI;IAC7C,OAAOe,WAAW,CAACH,MAAZ,CAAmBW,IAAI,IAAIA,IAAI,CAACb,KAAL,CAAWc,WAAX,GAAyBC,QAAzB,CAAkCC,WAAlC,CAA3B,CAAP;IAAmF;EACpF,CAFoC,EAEnC,CAACA,WAAD,EAAaX,WAAb,CAFmC,CAArC;;EAIA,MAAMY,UAAU,GAAIC,OAAD,IAAa;IAC9BpB,QAAQ,CAAC,CAAC,GAAGD,KAAJ,EAAWqB,OAAX,CAAD,CAAR;EACD,CAFD;;EAMA,MAAMC,UAAU,GAAIN,IAAD,IAAU;IAC3Bf,QAAQ,CAACD,KAAK,CAACK,MAAN,CAAakB,CAAC,IAAIA,CAAC,CAACrB,EAAF,KAASc,IAAI,CAACd,EAAhC,CAAD,CAAR;EAED,CAHD;;EAKA,MAAMsB,SAAS,GAAIjB,IAAD,IAAU;IAC1BkB,eAAe,CAAClB,IAAD,CAAf;EACD,CAFD;;EAKA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE,QAAC,QAAD;MAAU,MAAM,EAAEa;IAAlB;MAAA;MAAA;MAAA;IAAA,QADF,eAEE;MAAI,KAAK,EAAE;QAAEM,MAAM,EAAE;MAAV;IAAX;MAAA;MAAA;MAAA;IAAA,QAFF,eAGE,QAAC,UAAD;MAAA;MAAA;MAAA;IAAA,QAHF,EAIGX,qBAAqB,CAACY,MAAtB,KAAiC;IAAK;IAAtC,eACG,QAAC,QAAD;MAAU,MAAM,EAAEL,UAAlB;MAA8B,KAAK,EAAEP,qBAArC;MAA4D,KAAK,EAAC;IAAlE;MAAA;MAAA;MAAA;IAAA;IAA+F;IADlG,eAEG;MAAI,KAAK,EAAE;QAAEa,SAAS,EAAE;MAAb,CAAX;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QANN;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAcD;;GAtDQ7B,G;;KAAAA,G;AAwDT,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}